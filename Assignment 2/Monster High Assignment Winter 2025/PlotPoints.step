# Define hotkeys for viewing plot points. 
MenuItem "Monster High" "Show plot point menu" [ShowPlotPointMenu].
MenuItem "Monster High" "Show six random events" [Events].

# Entry point for execute 6 random events
[main]
Events: [InitializeFluents] [Event] [Event] [Event] [Event] [Event] [Event]

# Entry point for executing a single random event
[main]
SingleEvent: [InitializeFluents] [Event]

Event: [NewLine] [ClearContext] [SelectAndExecute] [Paragraph]

# SelectAndExecute
# Select a random plot point available in the current state and execute it. 
SelectAndExecute:
    [FindUnique ?e [PlotPoint ?e] ?eventList] 
    [RandomElement ?eventList ?event]
    [PlotPoint ?event] 
    [ExecutePlotPoint ?event]
[end]

# ExecuteSelectedPlotPoint
# Given a plot point, execute it, and show the plot point menu for the new state.
ExecuteSelectedPlotPoint ?plotPoint:
    [ClearContext]
    [ExecutePlotPoint ?plotPoint]
    [Paragraph]
    [MakePlotPointButtons]
[end]

# AddPlotPointButton
# Given a plot point, write it as a link. If the link is clicked, runs the task
# ExecuteSelectedPlotPoint. 
AddPlotPointButton ?plotPoint:
    [ClearContext]
    [SaveText [Write ?plotPoint] ?label]
    [AddButton ?label [ExecuteSelectedPlotPoint ?plotPoint]]
[end]

# ShowPlotPointMenustep
# Entry point for interactively selecting and executing available plot points.
# Resets the state to the initial story state, and writes the plot point menu. 
[main]
ShowPlotPointMenu:
    [EnvironmentOption discardState]
    [EnvironmentOption retainState]
    [InitializeFluents]
    [MakePlotPointButtons]
[end]

# AddPlotPointButtonMenu
# For each of the plot points applicable in the current story state, adds them to a menu.
[main]
MakePlotPointButtons: 
    [ForEach [PlotPoint ?event] [AddPlotPointButton ?event]]
[end] 

###
### What you need to write
###

[main]
[randomly]
predicate PlotPoint ?event.
# ?event is a possible plot point in a Monster High episode given
# the characters and their relationships.  Fill in methods for this,
# below.

PlotPoint [confess_love ?a ?b]: 
    [CrushOn ?a ?b] 
    [NotAny [Dating ?a ?b]]
[end]

# means ?a starts dating ?b. There are 2 different conditions in which ?a can start dating ?b:
# 1)    ?a knows that ?b has a crush on them, there's mutual attraction, they are not currently dating
#       each other, and they are not star crossed lovers
# 2)    Same as above, except that they are star crossed lovers, and ?a is confident
# Debug Note: Check for [IsA ?a ?typeA] to solve for character type in StarCrossedLovers, otherwise it
# will automatically substitute vampire werewolf even if it doesn't match the character
PlotPoint [start_dating ?a ?b]:
    [Knows ?a [CrushOn ?b ?a]] 
    [MutualAttraction ?a ?b] 
    [Not [Dating ?a ?b]]
    [IsA ?a ?typeA]
    [IsA ?b ?typeB]
    [Not [StarCrossedLovers ?a ?typeA ?b ?typeB]]
[end]
PlotPoint [start_dating ?a ?b]:
    [Knows ?a [CrushOn ?b ?a]] 
    [MutualAttraction ?a ?b] 
    [Not [Dating ?a ?b]]
    [IsA ?a ?typeA]
    [IsA ?b ?typeB]
    [StarCrossedLovers ?a ?typeA ?b ?typeB]
    [Confident ?a]
[end]

# means ?rejector romantically rejects ?rejected. This can occur when the ?rejector
# knows that ?rejected has a crush on them, and the love is unrequited
# (?rejected has UnrequitedLove with ?rejector)
PlotPoint [romantic_rejection ?rejector ?rejected]:
    [Knows ?rejector [CrushOn ?rejected ?rejector]]
    [UnrequitedLove ?rejected ?rejector]
[end]

# means ?attacker has a fight with ?defender about the fact that ?attacker and ?defender
# have the same ?loveInterest. This can occur when ?attacker and ?defender
# are in a love triangle with ?loveInterest
PlotPoint [fight ?attacker ?defender [triangle ?attacker ?defender ?loveInterest]]:
    [LoveTriangle ?attacker ?defender ?loveInterest]
    [Not [= ?attacker ?defender]]
[end]

PlotPoint [fight ?cheatee ?cheater [cheating ?cheater ?cheatee ?other]]:
    [CheatingOnWith ?cheater ?cheatee ?other]
    [Not [= ?cheatee ?cheater]]
    [Not [= ?cheatee ?other]]
[end]
# Pass: [fight hailey cameron [cheating cameron hailey jayden]]
# Pass: [fight jayden cameron [cheating cameron jayden hailey]]

# means that ?cheatee fights with ?other about ?cheater cheating on ?cheatee with ?
# other. This can occur when ?cheater is cheating on ?cheatee with ?other
PlotPoint [fight ?cheatee ?other [cheating ?cheater ?cheatee ?other]]:
    [CheatingOnWith ?cheater ?cheatee ?other]
    [Not [= ?cheatee ?cheater]]
    [Not [= ?cheatee ?other]]
[end]
# Pass: [fight hailey jayden [cheating cameron hailey jayden]]
# Pass: [fight jayden hailey [cheating cameron jayden hailey]]

# means that ?char1 breaks up with ?char2. This can occur when ?char1 and ?char2 are
# dating and ?char1 had a fight with ?char2
PlotPoint [breakup ?char1 ?char2]:
    [Dating ?char1 ?char2]
    [HadFightWith ?char1 ?char2]
[end]
# Pass: [breakup hailey cameron] after [fight hailey cameron [cheating cameron hailey jayden]]

PlotPoint [smoldering_look ?a ?b ?club]:
    [MutualAttraction ?a ?b]
    [InClub ?a ?club] [InClub ?b ?club]
[end]
# Pass: [smoldering look tiana jayden gda]

PlotPoint [star_crossed_lovers ?charA ?charAType ?charB ?charBType]:
    [StarCrossedLovers ?charA ?charAType ?charB ?charBType]
[end]
# Pass: [star_crossed_lovers tiana vampire jayden werewolf]

PlotPoint [support_from_friend ?supporter ?supportee [star_crossed_lovers ?supportee ?supporteeType ?crush ?crushType]]:
    [StarCrossedLovers ?supportee ?supporteeType ?crush ?crushType]
    [Friend ?supporter ?supportee]
    [Not [= ?supporter ?supportee]]
    [Not [= ?supporter ?crush]]
[end]


[main]
[randomly]
task ExecutePlotPoint ?event.
# Generate text to describe the specified plot point. Fill in methods
# for this, below.

###
### Place your code below
###

ExecutePlotPoint [confess_love ?confessor ?confessee]:
    ?confessor confesses ?confessor/Possessive love to ?confessee.
    [now [Knows ?confessee [CrushOn ?confessor ?confessee]]]
[end]

# Now ?a and ?b are	dating, and ?a doesn’t know anymore	about ?b’s crush on	?a (now	that
# they’re dating, they are beyond worrying about crushes).	
ExecutePlotPoint [start_dating ?a ?b]: 
    ?a and ?b start dating.
    [now [DatingHelper ?a ?b]]
    [now [Not [Knows ?a [CrushOn ?b ?a]]]]
[end]

# Now ?rejector doesn't know anymore that ?rejected has a crush on them, ?rejected no
# longer has a crush on ?rejector, and ?rejected considers ?rejector an enemy
ExecutePlotPoint [romantic_rejection ?rejector ?rejected]:
    ?rejector rejected the confession of ?rejected. ?rejected now considers ?rejector/Print an enemy.
    [now [Not [Knows ?rejector [CrushOn ?rejected ?rejector]]]]
    [now [Not [CrushOn ?rejected ?rejector]]]
    [now [Enemy ?rejected ?rejector]]
[end]

# means ?attacker has a fight with ?defender about the fact that ?attacker and ?defender
# have the same ?loveInterest. This can occur when ?attacker and ?defender
# are in a love triangle with ?loveInterest
ExecutePlotPoint [fight ?attacker ?defender [triangle ?attacker ?defender ?loveInterest]]:
    ?attacker has a fight with ?defender about the fact that they both have a crush on ?loveInterest.
    [now [HadFightWithHelper ?attacker ?defender]]
[end]

ExecutePlotPoint [fight ?cheatee ?cheater [cheating ?cheater ?cheatee ?other]]:
    ?cheatee finds out ?cheater has been cheating on ?cheatee/Possessive with ?other, and the couple have a horrible fight.
    [now [HadFightWithHelper ?cheatee ?cheater]]
[end]

ExecutePlotPoint [fight ?cheatee ?other [cheating ?cheater ?cheatee ?other]]:
    ?cheatee and ?other fight over ?cheater for some reason, even though ?cheater/Mention is a cheating scoundrel.
    [now [HadFightWithHelper ?cheatee ?other]]
[end]

# Since the two characters aren’t dating anymore, now they haven’t had a fight (the fight is no
# longer relevant after the breakup), and neither has a crush on the other.
ExecutePlotPoint [breakup ?char1 ?char2]:
    ?char1 and ?char2 finally break up. They don't like each other anymore.
    [now [RetractHadFightWith ?char1 ?char2]]
    [now [RetractDating ?char1 ?char2]]
    [now [Not [CrushOn ?char1 ?char2]]]
    [now [Not [CrushOn ?char2 ?char1]]]
[end]

ExecutePlotPoint [smoldering_look ?a ?b ?club]:
    ?a sends a smoldering look to ?b while they are both at ?club.
[end]

ExecutePlotPoint [star_crossed_lovers ?a ?atype ?b ?btype]:
    ?a and ?b are in love! Yet, ?a is a ?atype and ?b is a ?btype. Hence, they are star crossed lovers! Oh, the tragedy!
[end]

ExecutePlotPoint [support_from_friend ?supporter ?supportee [star_crossed_lovers ?supportee ?supporteeType ?crush ?crushType]]:
    ?supporter supports ?supportee in their quest for love with ?crush, despite them being star crossed lovers.
    [now [Confident ?supportee]]
[end]