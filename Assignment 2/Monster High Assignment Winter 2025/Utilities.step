# Find all the solutions to ?query and for each one, print ?var.
# This only makes sense if ?var appears in ?query.
[main]
PrintAll ?var ?query: [DoAll ?query [Write ?var] [NewLine]]

# Find all solutions to ?query and for each one print ?a and ?b.
# Again, only makes sense if ?a and ?b appear in ?query.
[main]
PrintAllPairs ?a ?b ?query: [DoAll ?query [Write ?a] [Write ?b] [NewLine]]

initially: [set Not = NotAny]

# Make a graph visualization of the character relationships
[main]
Visualize: [VisualizeGraph GraphEdge nodes Student node_color NodeColor name school]

[predicate]
GraphEdge ?who ?what "in club" white true: [InClub ?who ?what]
GraphEdge ?a ?b dating green false: [Dating ?a ?b]
GraphEdge ?a ?b crush yellow true: [CrushOn ?a ?b]
GraphEdge ?a ?b "had fight with" red true: [HadFightWith ?a ?b]
GraphEdge ?a ?b "had fight with helper" red true: [HadFightWithHelper ?a ?b]
GraphEdge ?a ?b "knows" blue true: [Knows ?a ?b]

[predicate]
NodeColor ?club white: [InClub ? ?club]
NodeColor ?who red: [IsA ?who vampire]
NodeColor ?who yellow: [IsA ?who human]
NodeColor ?who orange: [IsA ?who werewolf]
NodeColor ?who purple: [IsA ?who witch]
NodeColor ?who gray: [IsA ?who ghost]
NodeColor ?knowledge blue: [Tuple ?knowledge]

MenuItem "Monster High" "Visualize" [Visualize].